@model StoreTanPhat.Models.Slider

@{
    ViewBag.Title = "Thêm Mới";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


<div class="card">
    <h5 class="card-header">@ViewBag.Title</h5>
    <div class="card-body">
        @using (Html.BeginForm("Create", "Slider", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.TenSilder, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.TenSilder, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TenSilder, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DuLieuHinhAnh)
                    <br />
                    @Html.TextBoxFor(model => model.DuLieuHinhAnh, new { @class = "form-control-file", type = "file" })
                    @Html.ValidationMessageFor(model => model.DuLieuHinhAnh, "", new { @class = "text-danger" })
                    <br />
                    @if (ViewBag.Error != null)
                    {
                        <p class="badge rounded-pill badge-danger text-danger" style="font-size:15px;font-weight:bold">@ViewBag.Error</p>
                    }
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.TextAreaFor(model => model.MoTa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                    <script>
                   // đặt ID cho đối tượng nào
                    CKEDITOR.replace(@Html.IdFor(model => model.MoTa), {
                    height: 200
                });
                    </script>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ViTri)
                    @Html.DropDownListFor(model => model.ViTri, new SelectList(new[] {
                        new SelectListItem {Value = null, Text = "-- Chọn --" },
                        new SelectListItem {Value = "0", Text = "Trên đầu" },
                        new SelectListItem {Value = "1", Text = "Ở giữa" },
                        new SelectListItem {Value = "2", Text = "Dưới cùng" },
                    }, "Value", "Text"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ViTri, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HienThi)
                    @Html.DropDownListFor(model => model.HienThi, new SelectList(new[] {
                        new SelectListItem {Value = null, Text = "-- Chọn --" },
                        new SelectListItem {Value = "0", Text = "Ẩn" },
                        new SelectListItem {Value = "1", Text = "Hiện ra" },
                    }, "Value", "Text"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.HienThi, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Thêm Mới" class="btn btn-default" /> hoặc <span class="btn btn-info tex-white">@Html.ActionLink("Trở về trang chính", "Index")</span>
                    </div>
                </div>
        }
    </div>
</div>
